#! /home/haiyan/Research/yosys-sta/oss-cad-suite/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-53-g30f1de906)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/home/haiyan/Research/yosys-sta/oss-cad-suite/lib/ivl/system.vpi";
:vpi_module "/home/haiyan/Research/yosys-sta/oss-cad-suite/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/haiyan/Research/yosys-sta/oss-cad-suite/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/haiyan/Research/yosys-sta/oss-cad-suite/lib/ivl/v2005_math.vpi";
:vpi_module "/home/haiyan/Research/yosys-sta/oss-cad-suite/lib/ivl/va_math.vpi";
S_0x555590c6f420 .scope module, "tb_adder_16bit" "tb_adder_16bit" 2 3;
 .timescale -9 -12;
P_0x555590c6f380 .param/real "CLK_PERIOD" 0 2 6, Cr<m5000000000000000gfc5>; value=10.0000
v0x555590cf4090_0 .var "a", 15 0;
v0x555590cf4170_0 .var "b", 15 0;
v0x555590cf4210_0 .var "cin", 0 0;
v0x555590cf42b0_0 .var "clk", 0 0;
v0x555590cf4350_0 .net "cout", 0 0, L_0x555590d0b130;  1 drivers
v0x555590cf43f0_0 .var/i "i", 31 0;
v0x555590cf4490_0 .net "overflow", 0 0, L_0x555590d0b700;  1 drivers
v0x555590cf4560_0 .var "rst_n", 0 0;
v0x555590cf4600_0 .net "sum", 15 0, L_0x555590d08040;  1 drivers
S_0x555590c6f600 .scope module, "uut" "adder_16bit" 2 21, 3 1 0, S_0x555590c6f420;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "a";
    .port_info 1 /INPUT 16 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 16 "sum";
    .port_info 4 /OUTPUT 1 "cout";
    .port_info 5 /OUTPUT 1 "overflow";
L_0x555590d0b020 .functor BUFZ 1, v0x555590cf4210_0, C4<0>, C4<0>, C4<0>;
L_0x555590d0aca0 .functor XNOR 1, L_0x555590d0b220, L_0x555590d0ac00, C4<0>, C4<0>;
L_0x555590d0aef0 .functor XOR 1, L_0x555590d0adb0, L_0x555590d0ae50, C4<0>, C4<0>;
L_0x555590d0b700 .functor AND 1, L_0x555590d0aca0, L_0x555590d0aef0, C4<1>, C4<1>;
v0x555590cf33a0_0 .net *"_ivl_197", 0 0, L_0x555590d0b020;  1 drivers
v0x555590cf34a0_0 .net *"_ivl_201", 0 0, L_0x555590d0b220;  1 drivers
v0x555590cf3580_0 .net *"_ivl_203", 0 0, L_0x555590d0ac00;  1 drivers
v0x555590cf3640_0 .net *"_ivl_204", 0 0, L_0x555590d0aca0;  1 drivers
v0x555590cf3700_0 .net *"_ivl_207", 0 0, L_0x555590d0adb0;  1 drivers
v0x555590cf37e0_0 .net *"_ivl_209", 0 0, L_0x555590d0ae50;  1 drivers
v0x555590cf38c0_0 .net *"_ivl_210", 0 0, L_0x555590d0aef0;  1 drivers
v0x555590cf3980_0 .net "a", 15 0, v0x555590cf4090_0;  1 drivers
v0x555590cf3a60_0 .net "b", 15 0, v0x555590cf4170_0;  1 drivers
v0x555590cf3bd0_0 .net "carry", 16 0, L_0x555590d0a5c0;  1 drivers
v0x555590cf3cb0_0 .net "cin", 0 0, v0x555590cf4210_0;  1 drivers
v0x555590cf3d70_0 .net "cout", 0 0, L_0x555590d0b130;  alias, 1 drivers
v0x555590cf3e30_0 .net "overflow", 0 0, L_0x555590d0b700;  alias, 1 drivers
v0x555590cf3ef0_0 .net "sum", 15 0, L_0x555590d08040;  alias, 1 drivers
L_0x555590cf4760 .part v0x555590cf4090_0, 0, 1;
L_0x555590cf4830 .part v0x555590cf4170_0, 0, 1;
L_0x555590cf49c0 .part L_0x555590d0a5c0, 0, 1;
L_0x555590cf4b30 .part v0x555590cf4090_0, 0, 1;
L_0x555590cf4c00 .part v0x555590cf4170_0, 0, 1;
L_0x555590cf4de0 .part L_0x555590d0a5c0, 0, 1;
L_0x555590cf4f10 .part v0x555590cf4090_0, 0, 1;
L_0x555590cf5040 .part v0x555590cf4170_0, 0, 1;
L_0x555590cf54c0 .part v0x555590cf4090_0, 1, 1;
L_0x555590cf5560 .part v0x555590cf4170_0, 1, 1;
L_0x555590cf5720 .part L_0x555590d0a5c0, 1, 1;
L_0x555590cf58d0 .part v0x555590cf4090_0, 1, 1;
L_0x555590cf59e0 .part v0x555590cf4170_0, 1, 1;
L_0x555590cf5b90 .part L_0x555590d0a5c0, 1, 1;
L_0x555590cf5d40 .part v0x555590cf4090_0, 1, 1;
L_0x555590cf5de0 .part v0x555590cf4170_0, 1, 1;
L_0x555590cf6220 .part v0x555590cf4090_0, 2, 1;
L_0x555590cf62c0 .part v0x555590cf4170_0, 2, 1;
L_0x555590cf6510 .part L_0x555590d0a5c0, 2, 1;
L_0x555590cf66c0 .part v0x555590cf4090_0, 2, 1;
L_0x555590cf6360 .part v0x555590cf4170_0, 2, 1;
L_0x555590cf6920 .part L_0x555590d0a5c0, 2, 1;
L_0x555590cf6a80 .part v0x555590cf4090_0, 2, 1;
L_0x555590cf6b20 .part v0x555590cf4170_0, 2, 1;
L_0x555590cf7060 .part v0x555590cf4090_0, 3, 1;
L_0x555590cf7100 .part v0x555590cf4170_0, 3, 1;
L_0x555590cf7390 .part L_0x555590d0a5c0, 3, 1;
L_0x555590cf7540 .part v0x555590cf4090_0, 3, 1;
L_0x555590cf76d0 .part v0x555590cf4170_0, 3, 1;
L_0x555590cf7880 .part L_0x555590d0a5c0, 3, 1;
L_0x555590cf7b30 .part v0x555590cf4090_0, 3, 1;
L_0x555590cf7bd0 .part v0x555590cf4170_0, 3, 1;
L_0x555590cf8150 .part v0x555590cf4090_0, 4, 1;
L_0x555590cf81f0 .part v0x555590cf4170_0, 4, 1;
L_0x555590cf84c0 .part L_0x555590d0a5c0, 4, 1;
L_0x555590cf8670 .part v0x555590cf4090_0, 4, 1;
L_0x555590cf8840 .part v0x555590cf4170_0, 4, 1;
L_0x555590cf89f0 .part L_0x555590d0a5c0, 4, 1;
L_0x555590cf8bd0 .part v0x555590cf4090_0, 4, 1;
L_0x555590cf8e80 .part v0x555590cf4170_0, 4, 1;
L_0x555590cf9650 .part v0x555590cf4090_0, 5, 1;
L_0x555590cf96f0 .part v0x555590cf4170_0, 5, 1;
L_0x555590cf9a00 .part L_0x555590d0a5c0, 5, 1;
L_0x555590cf9bb0 .part v0x555590cf4090_0, 5, 1;
L_0x555590cf9dc0 .part v0x555590cf4170_0, 5, 1;
L_0x555590cf9f70 .part L_0x555590d0a5c0, 5, 1;
L_0x555590cfa190 .part v0x555590cf4090_0, 5, 1;
L_0x555590cfa230 .part v0x555590cf4170_0, 5, 1;
L_0x555590cfa830 .part v0x555590cf4090_0, 6, 1;
L_0x555590cfa8d0 .part v0x555590cf4170_0, 6, 1;
L_0x555590cfac20 .part L_0x555590d0a5c0, 6, 1;
L_0x555590cfadd0 .part v0x555590cf4090_0, 6, 1;
L_0x555590cfb020 .part v0x555590cf4170_0, 6, 1;
L_0x555590cfb1d0 .part L_0x555590d0a5c0, 6, 1;
L_0x555590cfb430 .part v0x555590cf4090_0, 6, 1;
L_0x555590cfb4d0 .part v0x555590cf4170_0, 6, 1;
L_0x555590cfbb10 .part v0x555590cf4090_0, 7, 1;
L_0x555590cfbbb0 .part v0x555590cf4170_0, 7, 1;
L_0x555590cfbf40 .part L_0x555590d0a5c0, 7, 1;
L_0x555590cfc0f0 .part v0x555590cf4090_0, 7, 1;
L_0x555590cfc380 .part v0x555590cf4170_0, 7, 1;
L_0x555590cfc530 .part L_0x555590d0a5c0, 7, 1;
L_0x555590cfc9e0 .part v0x555590cf4090_0, 7, 1;
L_0x555590cfca80 .part v0x555590cf4170_0, 7, 1;
L_0x555590cfd100 .part v0x555590cf4090_0, 8, 1;
L_0x555590cfd1a0 .part v0x555590cf4170_0, 8, 1;
L_0x555590cfd570 .part L_0x555590d0a5c0, 8, 1;
L_0x555590cfd720 .part v0x555590cf4090_0, 8, 1;
L_0x555590cfd9f0 .part v0x555590cf4170_0, 8, 1;
L_0x555590cfdba0 .part L_0x555590d0a5c0, 8, 1;
L_0x555590cfde80 .part v0x555590cf4090_0, 8, 1;
L_0x555590cfdf20 .part v0x555590cf4170_0, 8, 1;
L_0x555590cfe5e0 .part v0x555590cf4090_0, 9, 1;
L_0x555590cfe680 .part v0x555590cf4170_0, 9, 1;
L_0x555590cfea90 .part L_0x555590d0a5c0, 9, 1;
L_0x555590cfec40 .part v0x555590cf4090_0, 9, 1;
L_0x555590cfef50 .part v0x555590cf4170_0, 9, 1;
L_0x555590cff100 .part L_0x555590d0a5c0, 9, 1;
L_0x555590cff420 .part v0x555590cf4090_0, 9, 1;
L_0x555590cff4c0 .part v0x555590cf4170_0, 9, 1;
L_0x555590cffbc0 .part v0x555590cf4090_0, 10, 1;
L_0x555590d00070 .part v0x555590cf4170_0, 10, 1;
L_0x555590d008d0 .part L_0x555590d0a5c0, 10, 1;
L_0x555590d00a80 .part v0x555590cf4090_0, 10, 1;
L_0x555590d00dd0 .part v0x555590cf4170_0, 10, 1;
L_0x555590d00f80 .part L_0x555590d0a5c0, 10, 1;
L_0x555590d012e0 .part v0x555590cf4090_0, 10, 1;
L_0x555590d01380 .part v0x555590cf4170_0, 10, 1;
L_0x555590d01ac0 .part v0x555590cf4090_0, 11, 1;
L_0x555590d01b60 .part v0x555590cf4170_0, 11, 1;
L_0x555590d01ff0 .part L_0x555590d0a5c0, 11, 1;
L_0x555590d021a0 .part v0x555590cf4090_0, 11, 1;
L_0x555590d02530 .part v0x555590cf4170_0, 11, 1;
L_0x555590d026e0 .part L_0x555590d0a5c0, 11, 1;
L_0x555590d02a80 .part v0x555590cf4090_0, 11, 1;
L_0x555590d02b20 .part v0x555590cf4170_0, 11, 1;
L_0x555590d032a0 .part v0x555590cf4090_0, 12, 1;
L_0x555590d03340 .part v0x555590cf4170_0, 12, 1;
L_0x555590d03810 .part L_0x555590d0a5c0, 12, 1;
L_0x555590d039c0 .part v0x555590cf4090_0, 12, 1;
L_0x555590d03d90 .part v0x555590cf4170_0, 12, 1;
L_0x555590d03f40 .part L_0x555590d0a5c0, 12, 1;
L_0x555590d04320 .part v0x555590cf4090_0, 12, 1;
L_0x555590d043c0 .part v0x555590cf4170_0, 12, 1;
L_0x555590d04b80 .part v0x555590cf4090_0, 13, 1;
L_0x555590d04c20 .part v0x555590cf4170_0, 13, 1;
L_0x555590d05130 .part L_0x555590d0a5c0, 13, 1;
L_0x555590d052e0 .part v0x555590cf4090_0, 13, 1;
L_0x555590d056f0 .part v0x555590cf4170_0, 13, 1;
L_0x555590d058a0 .part L_0x555590d0a5c0, 13, 1;
L_0x555590d05cc0 .part v0x555590cf4090_0, 13, 1;
L_0x555590d05d60 .part v0x555590cf4170_0, 13, 1;
L_0x555590d06560 .part v0x555590cf4090_0, 14, 1;
L_0x555590d06600 .part v0x555590cf4170_0, 14, 1;
L_0x555590d06b50 .part L_0x555590d0a5c0, 14, 1;
L_0x555590d06d00 .part v0x555590cf4090_0, 14, 1;
L_0x555590d07150 .part v0x555590cf4170_0, 14, 1;
L_0x555590d07300 .part L_0x555590d0a5c0, 14, 1;
L_0x555590d07760 .part v0x555590cf4090_0, 14, 1;
L_0x555590d07800 .part v0x555590cf4170_0, 14, 1;
LS_0x555590d08040_0_0 .concat8 [ 1 1 1 1], L_0x555590cb45b0, L_0x555590cf57c0, L_0x555590cf65b0, L_0x555590cf7430;
LS_0x555590d08040_0_4 .concat8 [ 1 1 1 1], L_0x555590cf8560, L_0x555590cf9aa0, L_0x555590cfacc0, L_0x555590cfbfe0;
LS_0x555590d08040_0_8 .concat8 [ 1 1 1 1], L_0x555590cfd610, L_0x555590cfeb30, L_0x555590d00970, L_0x555590d02090;
LS_0x555590d08040_0_12 .concat8 [ 1 1 1 1], L_0x555590d038b0, L_0x555590d051d0, L_0x555590d06bf0, L_0x555590d090a0;
L_0x555590d08040 .concat8 [ 4 4 4 4], LS_0x555590d08040_0_0, LS_0x555590d08040_0_4, LS_0x555590d08040_0_8, LS_0x555590d08040_0_12;
L_0x555590d085e0 .part v0x555590cf4090_0, 15, 1;
L_0x555590d08a60 .part v0x555590cf4170_0, 15, 1;
L_0x555590d08c10 .part L_0x555590d0a5c0, 15, 1;
L_0x555590d09200 .part v0x555590cf4090_0, 15, 1;
L_0x555590d092a0 .part v0x555590cf4170_0, 15, 1;
L_0x555590d09850 .part L_0x555590d0a5c0, 15, 1;
L_0x555590d09d00 .part v0x555590cf4090_0, 15, 1;
L_0x555590d0a1b0 .part v0x555590cf4170_0, 15, 1;
LS_0x555590d0a5c0_0_0 .concat8 [ 1 1 1 1], L_0x555590d0b020, L_0x555590cf5370, L_0x555590cf60d0, L_0x555590cf6f10;
LS_0x555590d0a5c0_0_4 .concat8 [ 1 1 1 1], L_0x555590cf8000, L_0x555590cf9500, L_0x555590cfa6e0, L_0x555590cfb9c0;
LS_0x555590d0a5c0_0_8 .concat8 [ 1 1 1 1], L_0x555590cfcfb0, L_0x555590cfe490, L_0x555590cffa70, L_0x555590d01970;
LS_0x555590d0a5c0_0_12 .concat8 [ 1 1 1 1], L_0x555590d03150, L_0x555590d04a30, L_0x555590d06410, L_0x555590d07ef0;
LS_0x555590d0a5c0_0_16 .concat8 [ 1 0 0 0], L_0x555590d0a470;
LS_0x555590d0a5c0_1_0 .concat8 [ 4 4 4 4], LS_0x555590d0a5c0_0_0, LS_0x555590d0a5c0_0_4, LS_0x555590d0a5c0_0_8, LS_0x555590d0a5c0_0_12;
LS_0x555590d0a5c0_1_4 .concat8 [ 1 0 0 0], LS_0x555590d0a5c0_0_16;
L_0x555590d0a5c0 .concat8 [ 16 1 0 0], LS_0x555590d0a5c0_1_0, LS_0x555590d0a5c0_1_4;
L_0x555590d0b130 .part L_0x555590d0a5c0, 16, 1;
L_0x555590d0b220 .part v0x555590cf4090_0, 15, 1;
L_0x555590d0ac00 .part v0x555590cf4170_0, 15, 1;
L_0x555590d0adb0 .part v0x555590cf4090_0, 15, 1;
L_0x555590d0ae50 .part L_0x555590d08040, 15, 1;
S_0x555590c32cf0 .scope generate, "full_adder_stage[0]" "full_adder_stage[0]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590c32ed0 .param/l "i" 1 3 16, +C4<00>;
L_0x555590cb4540 .functor XOR 1, L_0x555590cf4760, L_0x555590cf4830, C4<0>, C4<0>;
L_0x555590cb45b0 .functor XOR 1, L_0x555590cb4540, L_0x555590cf49c0, C4<0>, C4<0>;
L_0x555590cf4ca0 .functor AND 1, L_0x555590cf4b30, L_0x555590cf4c00, C4<1>, C4<1>;
L_0x555590cf51c0 .functor XOR 1, L_0x555590cf4f10, L_0x555590cf5040, C4<0>, C4<0>;
L_0x555590cf5260 .functor AND 1, L_0x555590cf4de0, L_0x555590cf51c0, C4<1>, C4<1>;
L_0x555590cf5370 .functor OR 1, L_0x555590cf4ca0, L_0x555590cf5260, C4<0>, C4<0>;
v0x555590cb4720_0 .net *"_ivl_0", 0 0, L_0x555590cf4760;  1 drivers
v0x555590cb47c0_0 .net *"_ivl_1", 0 0, L_0x555590cf4830;  1 drivers
v0x555590ce3fa0_0 .net *"_ivl_11", 0 0, L_0x555590cf4de0;  1 drivers
v0x555590ce4060_0 .net *"_ivl_12", 0 0, L_0x555590cf4f10;  1 drivers
v0x555590ce4140_0 .net *"_ivl_13", 0 0, L_0x555590cf5040;  1 drivers
v0x555590ce4270_0 .net *"_ivl_14", 0 0, L_0x555590cf51c0;  1 drivers
v0x555590ce4350_0 .net *"_ivl_16", 0 0, L_0x555590cf5260;  1 drivers
v0x555590ce4430_0 .net *"_ivl_18", 0 0, L_0x555590cf5370;  1 drivers
v0x555590ce4510_0 .net *"_ivl_2", 0 0, L_0x555590cb4540;  1 drivers
v0x555590ce45f0_0 .net *"_ivl_4", 0 0, L_0x555590cf49c0;  1 drivers
v0x555590ce46d0_0 .net *"_ivl_5", 0 0, L_0x555590cb45b0;  1 drivers
v0x555590ce47b0_0 .net *"_ivl_7", 0 0, L_0x555590cf4b30;  1 drivers
v0x555590ce4890_0 .net *"_ivl_8", 0 0, L_0x555590cf4c00;  1 drivers
v0x555590ce4970_0 .net *"_ivl_9", 0 0, L_0x555590cf4ca0;  1 drivers
S_0x555590ce4a50 .scope generate, "full_adder_stage[1]" "full_adder_stage[1]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce4c20 .param/l "i" 1 3 16, +C4<01>;
L_0x555590cf5660 .functor XOR 1, L_0x555590cf54c0, L_0x555590cf5560, C4<0>, C4<0>;
L_0x555590cf57c0 .functor XOR 1, L_0x555590cf5660, L_0x555590cf5720, C4<0>, C4<0>;
L_0x555590cf5a80 .functor AND 1, L_0x555590cf58d0, L_0x555590cf59e0, C4<1>, C4<1>;
L_0x555590cf5970 .functor XOR 1, L_0x555590cf5d40, L_0x555590cf5de0, C4<0>, C4<0>;
L_0x555590cf5fc0 .functor AND 1, L_0x555590cf5b90, L_0x555590cf5970, C4<1>, C4<1>;
L_0x555590cf60d0 .functor OR 1, L_0x555590cf5a80, L_0x555590cf5fc0, C4<0>, C4<0>;
v0x555590ce4ce0_0 .net *"_ivl_0", 0 0, L_0x555590cf54c0;  1 drivers
v0x555590ce4dc0_0 .net *"_ivl_1", 0 0, L_0x555590cf5560;  1 drivers
v0x555590ce4ea0_0 .net *"_ivl_11", 0 0, L_0x555590cf5b90;  1 drivers
v0x555590ce4f60_0 .net *"_ivl_12", 0 0, L_0x555590cf5d40;  1 drivers
v0x555590ce5040_0 .net *"_ivl_13", 0 0, L_0x555590cf5de0;  1 drivers
v0x555590ce5170_0 .net *"_ivl_14", 0 0, L_0x555590cf5970;  1 drivers
v0x555590ce5250_0 .net *"_ivl_16", 0 0, L_0x555590cf5fc0;  1 drivers
v0x555590ce5330_0 .net *"_ivl_18", 0 0, L_0x555590cf60d0;  1 drivers
v0x555590ce5410_0 .net *"_ivl_2", 0 0, L_0x555590cf5660;  1 drivers
v0x555590ce54f0_0 .net *"_ivl_4", 0 0, L_0x555590cf5720;  1 drivers
v0x555590ce55d0_0 .net *"_ivl_5", 0 0, L_0x555590cf57c0;  1 drivers
v0x555590ce56b0_0 .net *"_ivl_7", 0 0, L_0x555590cf58d0;  1 drivers
v0x555590ce5790_0 .net *"_ivl_8", 0 0, L_0x555590cf59e0;  1 drivers
v0x555590ce5870_0 .net *"_ivl_9", 0 0, L_0x555590cf5a80;  1 drivers
S_0x555590ce5950 .scope generate, "full_adder_stage[2]" "full_adder_stage[2]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce5b00 .param/l "i" 1 3 16, +C4<010>;
L_0x555590cf6400 .functor XOR 1, L_0x555590cf6220, L_0x555590cf62c0, C4<0>, C4<0>;
L_0x555590cf65b0 .functor XOR 1, L_0x555590cf6400, L_0x555590cf6510, C4<0>, C4<0>;
L_0x555590cf6810 .functor AND 1, L_0x555590cf66c0, L_0x555590cf6360, C4<1>, C4<1>;
L_0x555590cf6c90 .functor XOR 1, L_0x555590cf6a80, L_0x555590cf6b20, C4<0>, C4<0>;
L_0x555590cf6e00 .functor AND 1, L_0x555590cf6920, L_0x555590cf6c90, C4<1>, C4<1>;
L_0x555590cf6f10 .functor OR 1, L_0x555590cf6810, L_0x555590cf6e00, C4<0>, C4<0>;
v0x555590ce5bc0_0 .net *"_ivl_0", 0 0, L_0x555590cf6220;  1 drivers
v0x555590ce5ca0_0 .net *"_ivl_1", 0 0, L_0x555590cf62c0;  1 drivers
v0x555590ce5d80_0 .net *"_ivl_11", 0 0, L_0x555590cf6920;  1 drivers
v0x555590ce5e40_0 .net *"_ivl_12", 0 0, L_0x555590cf6a80;  1 drivers
v0x555590ce5f20_0 .net *"_ivl_13", 0 0, L_0x555590cf6b20;  1 drivers
v0x555590ce6050_0 .net *"_ivl_14", 0 0, L_0x555590cf6c90;  1 drivers
v0x555590ce6130_0 .net *"_ivl_16", 0 0, L_0x555590cf6e00;  1 drivers
v0x555590ce6210_0 .net *"_ivl_18", 0 0, L_0x555590cf6f10;  1 drivers
v0x555590ce62f0_0 .net *"_ivl_2", 0 0, L_0x555590cf6400;  1 drivers
v0x555590ce6460_0 .net *"_ivl_4", 0 0, L_0x555590cf6510;  1 drivers
v0x555590ce6540_0 .net *"_ivl_5", 0 0, L_0x555590cf65b0;  1 drivers
v0x555590ce6620_0 .net *"_ivl_7", 0 0, L_0x555590cf66c0;  1 drivers
v0x555590ce6700_0 .net *"_ivl_8", 0 0, L_0x555590cf6360;  1 drivers
v0x555590ce67e0_0 .net *"_ivl_9", 0 0, L_0x555590cf6810;  1 drivers
S_0x555590ce68c0 .scope generate, "full_adder_stage[3]" "full_adder_stage[3]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce6a70 .param/l "i" 1 3 16, +C4<011>;
L_0x555590cf7280 .functor XOR 1, L_0x555590cf7060, L_0x555590cf7100, C4<0>, C4<0>;
L_0x555590cf7430 .functor XOR 1, L_0x555590cf7280, L_0x555590cf7390, C4<0>, C4<0>;
L_0x555590cf7770 .functor AND 1, L_0x555590cf7540, L_0x555590cf76d0, C4<1>, C4<1>;
L_0x555590cf7d80 .functor XOR 1, L_0x555590cf7b30, L_0x555590cf7bd0, C4<0>, C4<0>;
L_0x555590cf7ef0 .functor AND 1, L_0x555590cf7880, L_0x555590cf7d80, C4<1>, C4<1>;
L_0x555590cf8000 .functor OR 1, L_0x555590cf7770, L_0x555590cf7ef0, C4<0>, C4<0>;
v0x555590ce6b50_0 .net *"_ivl_0", 0 0, L_0x555590cf7060;  1 drivers
v0x555590ce6c30_0 .net *"_ivl_1", 0 0, L_0x555590cf7100;  1 drivers
v0x555590ce6d10_0 .net *"_ivl_11", 0 0, L_0x555590cf7880;  1 drivers
v0x555590ce6dd0_0 .net *"_ivl_12", 0 0, L_0x555590cf7b30;  1 drivers
v0x555590ce6eb0_0 .net *"_ivl_13", 0 0, L_0x555590cf7bd0;  1 drivers
v0x555590ce6fe0_0 .net *"_ivl_14", 0 0, L_0x555590cf7d80;  1 drivers
v0x555590ce70c0_0 .net *"_ivl_16", 0 0, L_0x555590cf7ef0;  1 drivers
v0x555590ce71a0_0 .net *"_ivl_18", 0 0, L_0x555590cf8000;  1 drivers
v0x555590ce7280_0 .net *"_ivl_2", 0 0, L_0x555590cf7280;  1 drivers
v0x555590ce73f0_0 .net *"_ivl_4", 0 0, L_0x555590cf7390;  1 drivers
v0x555590ce74d0_0 .net *"_ivl_5", 0 0, L_0x555590cf7430;  1 drivers
v0x555590ce75b0_0 .net *"_ivl_7", 0 0, L_0x555590cf7540;  1 drivers
v0x555590ce7690_0 .net *"_ivl_8", 0 0, L_0x555590cf76d0;  1 drivers
v0x555590ce7770_0 .net *"_ivl_9", 0 0, L_0x555590cf7770;  1 drivers
S_0x555590ce7850 .scope generate, "full_adder_stage[4]" "full_adder_stage[4]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce7a50 .param/l "i" 1 3 16, +C4<0100>;
L_0x555590cf83b0 .functor XOR 1, L_0x555590cf8150, L_0x555590cf81f0, C4<0>, C4<0>;
L_0x555590cf8560 .functor XOR 1, L_0x555590cf83b0, L_0x555590cf84c0, C4<0>, C4<0>;
L_0x555590cf88e0 .functor AND 1, L_0x555590cf8670, L_0x555590cf8840, C4<1>, C4<1>;
L_0x555590cf9280 .functor XOR 1, L_0x555590cf8bd0, L_0x555590cf8e80, C4<0>, C4<0>;
L_0x555590cf93f0 .functor AND 1, L_0x555590cf89f0, L_0x555590cf9280, C4<1>, C4<1>;
L_0x555590cf9500 .functor OR 1, L_0x555590cf88e0, L_0x555590cf93f0, C4<0>, C4<0>;
v0x555590ce7b30_0 .net *"_ivl_0", 0 0, L_0x555590cf8150;  1 drivers
v0x555590ce7c10_0 .net *"_ivl_1", 0 0, L_0x555590cf81f0;  1 drivers
v0x555590ce7cf0_0 .net *"_ivl_11", 0 0, L_0x555590cf89f0;  1 drivers
v0x555590ce7db0_0 .net *"_ivl_12", 0 0, L_0x555590cf8bd0;  1 drivers
v0x555590ce7e90_0 .net *"_ivl_13", 0 0, L_0x555590cf8e80;  1 drivers
v0x555590ce7fc0_0 .net *"_ivl_14", 0 0, L_0x555590cf9280;  1 drivers
v0x555590ce80a0_0 .net *"_ivl_16", 0 0, L_0x555590cf93f0;  1 drivers
v0x555590ce8180_0 .net *"_ivl_18", 0 0, L_0x555590cf9500;  1 drivers
v0x555590ce8260_0 .net *"_ivl_2", 0 0, L_0x555590cf83b0;  1 drivers
v0x555590ce83d0_0 .net *"_ivl_4", 0 0, L_0x555590cf84c0;  1 drivers
v0x555590ce84b0_0 .net *"_ivl_5", 0 0, L_0x555590cf8560;  1 drivers
v0x555590ce8590_0 .net *"_ivl_7", 0 0, L_0x555590cf8670;  1 drivers
v0x555590ce8670_0 .net *"_ivl_8", 0 0, L_0x555590cf8840;  1 drivers
v0x555590ce8750_0 .net *"_ivl_9", 0 0, L_0x555590cf88e0;  1 drivers
S_0x555590ce8830 .scope generate, "full_adder_stage[5]" "full_adder_stage[5]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce89e0 .param/l "i" 1 3 16, +C4<0101>;
L_0x555590cf98f0 .functor XOR 1, L_0x555590cf9650, L_0x555590cf96f0, C4<0>, C4<0>;
L_0x555590cf9aa0 .functor XOR 1, L_0x555590cf98f0, L_0x555590cf9a00, C4<0>, C4<0>;
L_0x555590cf9e60 .functor AND 1, L_0x555590cf9bb0, L_0x555590cf9dc0, C4<1>, C4<1>;
L_0x555590cfa460 .functor XOR 1, L_0x555590cfa190, L_0x555590cfa230, C4<0>, C4<0>;
L_0x555590cfa5d0 .functor AND 1, L_0x555590cf9f70, L_0x555590cfa460, C4<1>, C4<1>;
L_0x555590cfa6e0 .functor OR 1, L_0x555590cf9e60, L_0x555590cfa5d0, C4<0>, C4<0>;
v0x555590ce8ac0_0 .net *"_ivl_0", 0 0, L_0x555590cf9650;  1 drivers
v0x555590ce8ba0_0 .net *"_ivl_1", 0 0, L_0x555590cf96f0;  1 drivers
v0x555590ce8c80_0 .net *"_ivl_11", 0 0, L_0x555590cf9f70;  1 drivers
v0x555590ce8d40_0 .net *"_ivl_12", 0 0, L_0x555590cfa190;  1 drivers
v0x555590ce8e20_0 .net *"_ivl_13", 0 0, L_0x555590cfa230;  1 drivers
v0x555590ce8f50_0 .net *"_ivl_14", 0 0, L_0x555590cfa460;  1 drivers
v0x555590ce9030_0 .net *"_ivl_16", 0 0, L_0x555590cfa5d0;  1 drivers
v0x555590ce9110_0 .net *"_ivl_18", 0 0, L_0x555590cfa6e0;  1 drivers
v0x555590ce91f0_0 .net *"_ivl_2", 0 0, L_0x555590cf98f0;  1 drivers
v0x555590ce9360_0 .net *"_ivl_4", 0 0, L_0x555590cf9a00;  1 drivers
v0x555590ce9440_0 .net *"_ivl_5", 0 0, L_0x555590cf9aa0;  1 drivers
v0x555590ce9520_0 .net *"_ivl_7", 0 0, L_0x555590cf9bb0;  1 drivers
v0x555590ce9600_0 .net *"_ivl_8", 0 0, L_0x555590cf9dc0;  1 drivers
v0x555590ce96e0_0 .net *"_ivl_9", 0 0, L_0x555590cf9e60;  1 drivers
S_0x555590ce97c0 .scope generate, "full_adder_stage[6]" "full_adder_stage[6]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce9970 .param/l "i" 1 3 16, +C4<0110>;
L_0x555590cfab10 .functor XOR 1, L_0x555590cfa830, L_0x555590cfa8d0, C4<0>, C4<0>;
L_0x555590cfacc0 .functor XOR 1, L_0x555590cfab10, L_0x555590cfac20, C4<0>, C4<0>;
L_0x555590cfb0c0 .functor AND 1, L_0x555590cfadd0, L_0x555590cfb020, C4<1>, C4<1>;
L_0x555590cfb740 .functor XOR 1, L_0x555590cfb430, L_0x555590cfb4d0, C4<0>, C4<0>;
L_0x555590cfb8b0 .functor AND 1, L_0x555590cfb1d0, L_0x555590cfb740, C4<1>, C4<1>;
L_0x555590cfb9c0 .functor OR 1, L_0x555590cfb0c0, L_0x555590cfb8b0, C4<0>, C4<0>;
v0x555590ce9a50_0 .net *"_ivl_0", 0 0, L_0x555590cfa830;  1 drivers
v0x555590ce9b30_0 .net *"_ivl_1", 0 0, L_0x555590cfa8d0;  1 drivers
v0x555590ce9c10_0 .net *"_ivl_11", 0 0, L_0x555590cfb1d0;  1 drivers
v0x555590ce9cd0_0 .net *"_ivl_12", 0 0, L_0x555590cfb430;  1 drivers
v0x555590ce9db0_0 .net *"_ivl_13", 0 0, L_0x555590cfb4d0;  1 drivers
v0x555590ce9ee0_0 .net *"_ivl_14", 0 0, L_0x555590cfb740;  1 drivers
v0x555590ce9fc0_0 .net *"_ivl_16", 0 0, L_0x555590cfb8b0;  1 drivers
v0x555590cea0a0_0 .net *"_ivl_18", 0 0, L_0x555590cfb9c0;  1 drivers
v0x555590cea180_0 .net *"_ivl_2", 0 0, L_0x555590cfab10;  1 drivers
v0x555590cea2f0_0 .net *"_ivl_4", 0 0, L_0x555590cfac20;  1 drivers
v0x555590cea3d0_0 .net *"_ivl_5", 0 0, L_0x555590cfacc0;  1 drivers
v0x555590cea4b0_0 .net *"_ivl_7", 0 0, L_0x555590cfadd0;  1 drivers
v0x555590cea590_0 .net *"_ivl_8", 0 0, L_0x555590cfb020;  1 drivers
v0x555590cea670_0 .net *"_ivl_9", 0 0, L_0x555590cfb0c0;  1 drivers
S_0x555590cea750 .scope generate, "full_adder_stage[7]" "full_adder_stage[7]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cea900 .param/l "i" 1 3 16, +C4<0111>;
L_0x555590cfbe30 .functor XOR 1, L_0x555590cfbb10, L_0x555590cfbbb0, C4<0>, C4<0>;
L_0x555590cfbfe0 .functor XOR 1, L_0x555590cfbe30, L_0x555590cfbf40, C4<0>, C4<0>;
L_0x555590cfc420 .functor AND 1, L_0x555590cfc0f0, L_0x555590cfc380, C4<1>, C4<1>;
L_0x555590cfcd30 .functor XOR 1, L_0x555590cfc9e0, L_0x555590cfca80, C4<0>, C4<0>;
L_0x555590cfcea0 .functor AND 1, L_0x555590cfc530, L_0x555590cfcd30, C4<1>, C4<1>;
L_0x555590cfcfb0 .functor OR 1, L_0x555590cfc420, L_0x555590cfcea0, C4<0>, C4<0>;
v0x555590cea9e0_0 .net *"_ivl_0", 0 0, L_0x555590cfbb10;  1 drivers
v0x555590ceaac0_0 .net *"_ivl_1", 0 0, L_0x555590cfbbb0;  1 drivers
v0x555590ceaba0_0 .net *"_ivl_11", 0 0, L_0x555590cfc530;  1 drivers
v0x555590ceac60_0 .net *"_ivl_12", 0 0, L_0x555590cfc9e0;  1 drivers
v0x555590cead40_0 .net *"_ivl_13", 0 0, L_0x555590cfca80;  1 drivers
v0x555590ceae70_0 .net *"_ivl_14", 0 0, L_0x555590cfcd30;  1 drivers
v0x555590ceaf50_0 .net *"_ivl_16", 0 0, L_0x555590cfcea0;  1 drivers
v0x555590ceb030_0 .net *"_ivl_18", 0 0, L_0x555590cfcfb0;  1 drivers
v0x555590ceb110_0 .net *"_ivl_2", 0 0, L_0x555590cfbe30;  1 drivers
v0x555590ceb280_0 .net *"_ivl_4", 0 0, L_0x555590cfbf40;  1 drivers
v0x555590ceb360_0 .net *"_ivl_5", 0 0, L_0x555590cfbfe0;  1 drivers
v0x555590ceb440_0 .net *"_ivl_7", 0 0, L_0x555590cfc0f0;  1 drivers
v0x555590ceb520_0 .net *"_ivl_8", 0 0, L_0x555590cfc380;  1 drivers
v0x555590ceb600_0 .net *"_ivl_9", 0 0, L_0x555590cfc420;  1 drivers
S_0x555590ceb6e0 .scope generate, "full_adder_stage[8]" "full_adder_stage[8]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ce7a00 .param/l "i" 1 3 16, +C4<01000>;
L_0x555590cfd460 .functor XOR 1, L_0x555590cfd100, L_0x555590cfd1a0, C4<0>, C4<0>;
L_0x555590cfd610 .functor XOR 1, L_0x555590cfd460, L_0x555590cfd570, C4<0>, C4<0>;
L_0x555590cfda90 .functor AND 1, L_0x555590cfd720, L_0x555590cfd9f0, C4<1>, C4<1>;
L_0x555590cfe210 .functor XOR 1, L_0x555590cfde80, L_0x555590cfdf20, C4<0>, C4<0>;
L_0x555590cfe380 .functor AND 1, L_0x555590cfdba0, L_0x555590cfe210, C4<1>, C4<1>;
L_0x555590cfe490 .functor OR 1, L_0x555590cfda90, L_0x555590cfe380, C4<0>, C4<0>;
v0x555590ceb9b0_0 .net *"_ivl_0", 0 0, L_0x555590cfd100;  1 drivers
v0x555590ceba90_0 .net *"_ivl_1", 0 0, L_0x555590cfd1a0;  1 drivers
v0x555590cebb70_0 .net *"_ivl_11", 0 0, L_0x555590cfdba0;  1 drivers
v0x555590cebc30_0 .net *"_ivl_12", 0 0, L_0x555590cfde80;  1 drivers
v0x555590cebd10_0 .net *"_ivl_13", 0 0, L_0x555590cfdf20;  1 drivers
v0x555590cebe40_0 .net *"_ivl_14", 0 0, L_0x555590cfe210;  1 drivers
v0x555590cebf20_0 .net *"_ivl_16", 0 0, L_0x555590cfe380;  1 drivers
v0x555590cec000_0 .net *"_ivl_18", 0 0, L_0x555590cfe490;  1 drivers
v0x555590cec0e0_0 .net *"_ivl_2", 0 0, L_0x555590cfd460;  1 drivers
v0x555590cec250_0 .net *"_ivl_4", 0 0, L_0x555590cfd570;  1 drivers
v0x555590cec330_0 .net *"_ivl_5", 0 0, L_0x555590cfd610;  1 drivers
v0x555590cec410_0 .net *"_ivl_7", 0 0, L_0x555590cfd720;  1 drivers
v0x555590cec4f0_0 .net *"_ivl_8", 0 0, L_0x555590cfd9f0;  1 drivers
v0x555590cec5d0_0 .net *"_ivl_9", 0 0, L_0x555590cfda90;  1 drivers
S_0x555590cec6b0 .scope generate, "full_adder_stage[9]" "full_adder_stage[9]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cec860 .param/l "i" 1 3 16, +C4<01001>;
L_0x555590cfe980 .functor XOR 1, L_0x555590cfe5e0, L_0x555590cfe680, C4<0>, C4<0>;
L_0x555590cfeb30 .functor XOR 1, L_0x555590cfe980, L_0x555590cfea90, C4<0>, C4<0>;
L_0x555590cfeff0 .functor AND 1, L_0x555590cfec40, L_0x555590cfef50, C4<1>, C4<1>;
L_0x555590cff7f0 .functor XOR 1, L_0x555590cff420, L_0x555590cff4c0, C4<0>, C4<0>;
L_0x555590cff960 .functor AND 1, L_0x555590cff100, L_0x555590cff7f0, C4<1>, C4<1>;
L_0x555590cffa70 .functor OR 1, L_0x555590cfeff0, L_0x555590cff960, C4<0>, C4<0>;
v0x555590cec940_0 .net *"_ivl_0", 0 0, L_0x555590cfe5e0;  1 drivers
v0x555590ceca20_0 .net *"_ivl_1", 0 0, L_0x555590cfe680;  1 drivers
v0x555590cecb00_0 .net *"_ivl_11", 0 0, L_0x555590cff100;  1 drivers
v0x555590cecbc0_0 .net *"_ivl_12", 0 0, L_0x555590cff420;  1 drivers
v0x555590cecca0_0 .net *"_ivl_13", 0 0, L_0x555590cff4c0;  1 drivers
v0x555590cecdd0_0 .net *"_ivl_14", 0 0, L_0x555590cff7f0;  1 drivers
v0x555590ceceb0_0 .net *"_ivl_16", 0 0, L_0x555590cff960;  1 drivers
v0x555590cecf90_0 .net *"_ivl_18", 0 0, L_0x555590cffa70;  1 drivers
v0x555590ced070_0 .net *"_ivl_2", 0 0, L_0x555590cfe980;  1 drivers
v0x555590ced1e0_0 .net *"_ivl_4", 0 0, L_0x555590cfea90;  1 drivers
v0x555590ced2c0_0 .net *"_ivl_5", 0 0, L_0x555590cfeb30;  1 drivers
v0x555590ced3a0_0 .net *"_ivl_7", 0 0, L_0x555590cfec40;  1 drivers
v0x555590ced480_0 .net *"_ivl_8", 0 0, L_0x555590cfef50;  1 drivers
v0x555590ced560_0 .net *"_ivl_9", 0 0, L_0x555590cfeff0;  1 drivers
S_0x555590ced640 .scope generate, "full_adder_stage[10]" "full_adder_stage[10]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590ced7f0 .param/l "i" 1 3 16, +C4<01010>;
L_0x555590d007c0 .functor XOR 1, L_0x555590cffbc0, L_0x555590d00070, C4<0>, C4<0>;
L_0x555590d00970 .functor XOR 1, L_0x555590d007c0, L_0x555590d008d0, C4<0>, C4<0>;
L_0x555590d00e70 .functor AND 1, L_0x555590d00a80, L_0x555590d00dd0, C4<1>, C4<1>;
L_0x555590d016f0 .functor XOR 1, L_0x555590d012e0, L_0x555590d01380, C4<0>, C4<0>;
L_0x555590d01860 .functor AND 1, L_0x555590d00f80, L_0x555590d016f0, C4<1>, C4<1>;
L_0x555590d01970 .functor OR 1, L_0x555590d00e70, L_0x555590d01860, C4<0>, C4<0>;
v0x555590ced8d0_0 .net *"_ivl_0", 0 0, L_0x555590cffbc0;  1 drivers
v0x555590ced9b0_0 .net *"_ivl_1", 0 0, L_0x555590d00070;  1 drivers
v0x555590ceda90_0 .net *"_ivl_11", 0 0, L_0x555590d00f80;  1 drivers
v0x555590cedb50_0 .net *"_ivl_12", 0 0, L_0x555590d012e0;  1 drivers
v0x555590cedc30_0 .net *"_ivl_13", 0 0, L_0x555590d01380;  1 drivers
v0x555590cedd60_0 .net *"_ivl_14", 0 0, L_0x555590d016f0;  1 drivers
v0x555590cede40_0 .net *"_ivl_16", 0 0, L_0x555590d01860;  1 drivers
v0x555590cedf20_0 .net *"_ivl_18", 0 0, L_0x555590d01970;  1 drivers
v0x555590cee000_0 .net *"_ivl_2", 0 0, L_0x555590d007c0;  1 drivers
v0x555590cee170_0 .net *"_ivl_4", 0 0, L_0x555590d008d0;  1 drivers
v0x555590cee250_0 .net *"_ivl_5", 0 0, L_0x555590d00970;  1 drivers
v0x555590cee330_0 .net *"_ivl_7", 0 0, L_0x555590d00a80;  1 drivers
v0x555590cee410_0 .net *"_ivl_8", 0 0, L_0x555590d00dd0;  1 drivers
v0x555590cee4f0_0 .net *"_ivl_9", 0 0, L_0x555590d00e70;  1 drivers
S_0x555590cee5d0 .scope generate, "full_adder_stage[11]" "full_adder_stage[11]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cee780 .param/l "i" 1 3 16, +C4<01011>;
L_0x555590d01ee0 .functor XOR 1, L_0x555590d01ac0, L_0x555590d01b60, C4<0>, C4<0>;
L_0x555590d02090 .functor XOR 1, L_0x555590d01ee0, L_0x555590d01ff0, C4<0>, C4<0>;
L_0x555590d025d0 .functor AND 1, L_0x555590d021a0, L_0x555590d02530, C4<1>, C4<1>;
L_0x555590d02ed0 .functor XOR 1, L_0x555590d02a80, L_0x555590d02b20, C4<0>, C4<0>;
L_0x555590d03040 .functor AND 1, L_0x555590d026e0, L_0x555590d02ed0, C4<1>, C4<1>;
L_0x555590d03150 .functor OR 1, L_0x555590d025d0, L_0x555590d03040, C4<0>, C4<0>;
v0x555590cee860_0 .net *"_ivl_0", 0 0, L_0x555590d01ac0;  1 drivers
v0x555590cee940_0 .net *"_ivl_1", 0 0, L_0x555590d01b60;  1 drivers
v0x555590ceea20_0 .net *"_ivl_11", 0 0, L_0x555590d026e0;  1 drivers
v0x555590ceeae0_0 .net *"_ivl_12", 0 0, L_0x555590d02a80;  1 drivers
v0x555590ceebc0_0 .net *"_ivl_13", 0 0, L_0x555590d02b20;  1 drivers
v0x555590ceecf0_0 .net *"_ivl_14", 0 0, L_0x555590d02ed0;  1 drivers
v0x555590ceedd0_0 .net *"_ivl_16", 0 0, L_0x555590d03040;  1 drivers
v0x555590ceeeb0_0 .net *"_ivl_18", 0 0, L_0x555590d03150;  1 drivers
v0x555590ceef90_0 .net *"_ivl_2", 0 0, L_0x555590d01ee0;  1 drivers
v0x555590cef100_0 .net *"_ivl_4", 0 0, L_0x555590d01ff0;  1 drivers
v0x555590cef1e0_0 .net *"_ivl_5", 0 0, L_0x555590d02090;  1 drivers
v0x555590cef2c0_0 .net *"_ivl_7", 0 0, L_0x555590d021a0;  1 drivers
v0x555590cef3a0_0 .net *"_ivl_8", 0 0, L_0x555590d02530;  1 drivers
v0x555590cef480_0 .net *"_ivl_9", 0 0, L_0x555590d025d0;  1 drivers
S_0x555590cef560 .scope generate, "full_adder_stage[12]" "full_adder_stage[12]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cef710 .param/l "i" 1 3 16, +C4<01100>;
L_0x555590d03700 .functor XOR 1, L_0x555590d032a0, L_0x555590d03340, C4<0>, C4<0>;
L_0x555590d038b0 .functor XOR 1, L_0x555590d03700, L_0x555590d03810, C4<0>, C4<0>;
L_0x555590d03e30 .functor AND 1, L_0x555590d039c0, L_0x555590d03d90, C4<1>, C4<1>;
L_0x555590d047b0 .functor XOR 1, L_0x555590d04320, L_0x555590d043c0, C4<0>, C4<0>;
L_0x555590d04920 .functor AND 1, L_0x555590d03f40, L_0x555590d047b0, C4<1>, C4<1>;
L_0x555590d04a30 .functor OR 1, L_0x555590d03e30, L_0x555590d04920, C4<0>, C4<0>;
v0x555590cef7f0_0 .net *"_ivl_0", 0 0, L_0x555590d032a0;  1 drivers
v0x555590cef8d0_0 .net *"_ivl_1", 0 0, L_0x555590d03340;  1 drivers
v0x555590cef9b0_0 .net *"_ivl_11", 0 0, L_0x555590d03f40;  1 drivers
v0x555590cefa70_0 .net *"_ivl_12", 0 0, L_0x555590d04320;  1 drivers
v0x555590cefb50_0 .net *"_ivl_13", 0 0, L_0x555590d043c0;  1 drivers
v0x555590cefc80_0 .net *"_ivl_14", 0 0, L_0x555590d047b0;  1 drivers
v0x555590cefd60_0 .net *"_ivl_16", 0 0, L_0x555590d04920;  1 drivers
v0x555590cefe40_0 .net *"_ivl_18", 0 0, L_0x555590d04a30;  1 drivers
v0x555590ceff20_0 .net *"_ivl_2", 0 0, L_0x555590d03700;  1 drivers
v0x555590cf0090_0 .net *"_ivl_4", 0 0, L_0x555590d03810;  1 drivers
v0x555590cf0170_0 .net *"_ivl_5", 0 0, L_0x555590d038b0;  1 drivers
v0x555590cf0250_0 .net *"_ivl_7", 0 0, L_0x555590d039c0;  1 drivers
v0x555590cf0330_0 .net *"_ivl_8", 0 0, L_0x555590d03d90;  1 drivers
v0x555590cf0410_0 .net *"_ivl_9", 0 0, L_0x555590d03e30;  1 drivers
S_0x555590cf04f0 .scope generate, "full_adder_stage[13]" "full_adder_stage[13]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cf06a0 .param/l "i" 1 3 16, +C4<01101>;
L_0x555590d05020 .functor XOR 1, L_0x555590d04b80, L_0x555590d04c20, C4<0>, C4<0>;
L_0x555590d051d0 .functor XOR 1, L_0x555590d05020, L_0x555590d05130, C4<0>, C4<0>;
L_0x555590d05790 .functor AND 1, L_0x555590d052e0, L_0x555590d056f0, C4<1>, C4<1>;
L_0x555590d06190 .functor XOR 1, L_0x555590d05cc0, L_0x555590d05d60, C4<0>, C4<0>;
L_0x555590d06300 .functor AND 1, L_0x555590d058a0, L_0x555590d06190, C4<1>, C4<1>;
L_0x555590d06410 .functor OR 1, L_0x555590d05790, L_0x555590d06300, C4<0>, C4<0>;
v0x555590cf0780_0 .net *"_ivl_0", 0 0, L_0x555590d04b80;  1 drivers
v0x555590cf0860_0 .net *"_ivl_1", 0 0, L_0x555590d04c20;  1 drivers
v0x555590cf0940_0 .net *"_ivl_11", 0 0, L_0x555590d058a0;  1 drivers
v0x555590cf0a00_0 .net *"_ivl_12", 0 0, L_0x555590d05cc0;  1 drivers
v0x555590cf0ae0_0 .net *"_ivl_13", 0 0, L_0x555590d05d60;  1 drivers
v0x555590cf0c10_0 .net *"_ivl_14", 0 0, L_0x555590d06190;  1 drivers
v0x555590cf0cf0_0 .net *"_ivl_16", 0 0, L_0x555590d06300;  1 drivers
v0x555590cf0dd0_0 .net *"_ivl_18", 0 0, L_0x555590d06410;  1 drivers
v0x555590cf0eb0_0 .net *"_ivl_2", 0 0, L_0x555590d05020;  1 drivers
v0x555590cf1020_0 .net *"_ivl_4", 0 0, L_0x555590d05130;  1 drivers
v0x555590cf1100_0 .net *"_ivl_5", 0 0, L_0x555590d051d0;  1 drivers
v0x555590cf11e0_0 .net *"_ivl_7", 0 0, L_0x555590d052e0;  1 drivers
v0x555590cf12c0_0 .net *"_ivl_8", 0 0, L_0x555590d056f0;  1 drivers
v0x555590cf13a0_0 .net *"_ivl_9", 0 0, L_0x555590d05790;  1 drivers
S_0x555590cf1480 .scope generate, "full_adder_stage[14]" "full_adder_stage[14]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cf1630 .param/l "i" 1 3 16, +C4<01110>;
L_0x555590d06a40 .functor XOR 1, L_0x555590d06560, L_0x555590d06600, C4<0>, C4<0>;
L_0x555590d06bf0 .functor XOR 1, L_0x555590d06a40, L_0x555590d06b50, C4<0>, C4<0>;
L_0x555590d071f0 .functor AND 1, L_0x555590d06d00, L_0x555590d07150, C4<1>, C4<1>;
L_0x555590d07c70 .functor XOR 1, L_0x555590d07760, L_0x555590d07800, C4<0>, C4<0>;
L_0x555590d07de0 .functor AND 1, L_0x555590d07300, L_0x555590d07c70, C4<1>, C4<1>;
L_0x555590d07ef0 .functor OR 1, L_0x555590d071f0, L_0x555590d07de0, C4<0>, C4<0>;
v0x555590cf1710_0 .net *"_ivl_0", 0 0, L_0x555590d06560;  1 drivers
v0x555590cf17f0_0 .net *"_ivl_1", 0 0, L_0x555590d06600;  1 drivers
v0x555590cf18d0_0 .net *"_ivl_11", 0 0, L_0x555590d07300;  1 drivers
v0x555590cf1990_0 .net *"_ivl_12", 0 0, L_0x555590d07760;  1 drivers
v0x555590cf1a70_0 .net *"_ivl_13", 0 0, L_0x555590d07800;  1 drivers
v0x555590cf1ba0_0 .net *"_ivl_14", 0 0, L_0x555590d07c70;  1 drivers
v0x555590cf1c80_0 .net *"_ivl_16", 0 0, L_0x555590d07de0;  1 drivers
v0x555590cf1d60_0 .net *"_ivl_18", 0 0, L_0x555590d07ef0;  1 drivers
v0x555590cf1e40_0 .net *"_ivl_2", 0 0, L_0x555590d06a40;  1 drivers
v0x555590cf1fb0_0 .net *"_ivl_4", 0 0, L_0x555590d06b50;  1 drivers
v0x555590cf2090_0 .net *"_ivl_5", 0 0, L_0x555590d06bf0;  1 drivers
v0x555590cf2170_0 .net *"_ivl_7", 0 0, L_0x555590d06d00;  1 drivers
v0x555590cf2250_0 .net *"_ivl_8", 0 0, L_0x555590d07150;  1 drivers
v0x555590cf2330_0 .net *"_ivl_9", 0 0, L_0x555590d071f0;  1 drivers
S_0x555590cf2410 .scope generate, "full_adder_stage[15]" "full_adder_stage[15]" 3 16, 3 16 0, S_0x555590c6f600;
 .timescale 0 0;
P_0x555590cf25c0 .param/l "i" 1 3 16, +C4<01111>;
L_0x555590d08b00 .functor XOR 1, L_0x555590d085e0, L_0x555590d08a60, C4<0>, C4<0>;
L_0x555590d090a0 .functor XOR 1, L_0x555590d08b00, L_0x555590d08c10, C4<0>, C4<0>;
L_0x555590d09740 .functor AND 1, L_0x555590d09200, L_0x555590d092a0, C4<1>, C4<1>;
L_0x555590d0a250 .functor XOR 1, L_0x555590d09d00, L_0x555590d0a1b0, C4<0>, C4<0>;
L_0x555590d0a360 .functor AND 1, L_0x555590d09850, L_0x555590d0a250, C4<1>, C4<1>;
L_0x555590d0a470 .functor OR 1, L_0x555590d09740, L_0x555590d0a360, C4<0>, C4<0>;
v0x555590cf26a0_0 .net *"_ivl_0", 0 0, L_0x555590d085e0;  1 drivers
v0x555590cf2780_0 .net *"_ivl_1", 0 0, L_0x555590d08a60;  1 drivers
v0x555590cf2860_0 .net *"_ivl_11", 0 0, L_0x555590d09850;  1 drivers
v0x555590cf2920_0 .net *"_ivl_12", 0 0, L_0x555590d09d00;  1 drivers
v0x555590cf2a00_0 .net *"_ivl_13", 0 0, L_0x555590d0a1b0;  1 drivers
v0x555590cf2b30_0 .net *"_ivl_14", 0 0, L_0x555590d0a250;  1 drivers
v0x555590cf2c10_0 .net *"_ivl_16", 0 0, L_0x555590d0a360;  1 drivers
v0x555590cf2cf0_0 .net *"_ivl_18", 0 0, L_0x555590d0a470;  1 drivers
v0x555590cf2dd0_0 .net *"_ivl_2", 0 0, L_0x555590d08b00;  1 drivers
v0x555590cf2f40_0 .net *"_ivl_4", 0 0, L_0x555590d08c10;  1 drivers
v0x555590cf3020_0 .net *"_ivl_5", 0 0, L_0x555590d090a0;  1 drivers
v0x555590cf3100_0 .net *"_ivl_7", 0 0, L_0x555590d09200;  1 drivers
v0x555590cf31e0_0 .net *"_ivl_8", 0 0, L_0x555590d092a0;  1 drivers
v0x555590cf32c0_0 .net *"_ivl_9", 0 0, L_0x555590d09740;  1 drivers
    .scope S_0x555590c6f420;
T_0 ;
    %delay 5000, 0;
    %load/vec4 v0x555590cf42b0_0;
    %inv;
    %store/vec4 v0x555590cf42b0_0, 0, 1;
    %jmp T_0;
    .thread T_0;
    .scope S_0x555590c6f420;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf42b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4560_0, 0, 1;
    %delay 20000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555590cf4560_0, 0, 1;
    %end;
    .thread T_1;
    .scope S_0x555590c6f420;
T_2 ;
    %vpi_call 2 45 "$dumpfile", "tb_adder_16bit.vcd" {0 0 0};
    %vpi_call 2 46 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x555590c6f420 {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x555590c6f420;
T_3 ;
    %vpi_call 2 54 "$display", "=== Basic Test ===" {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 57 "$display", "Test case: a=0x0000, b=0x0000, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 2, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 61 "$display", "Test case: a=0x0001, b=0x0002, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 255, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 65 "$display", "Test case: a=0x00FF, b=0x0001, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %end;
    .thread T_3;
    .scope S_0x555590c6f420;
T_4 ;
    %vpi_call 2 70 "$display", "=== Carry Propagation Test ===" {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 73 "$display", "Test case: a=0x0000, b=0x0000, cin=1 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 77 "$display", "Test case: a=0x0000, b=0x0000, cin=1 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 81 "$display", "Test case: a=0x0000, b=0x0000, cin=1 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %end;
    .thread T_4;
    .scope S_0x555590c6f420;
T_5 ;
    %vpi_call 2 86 "$display", "=== Overflow Test ===" {0 0 0};
    %pushi/vec4 32768, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 32768, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 89 "$display", "Test case: a=0x8000, b=0x8000, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 32767, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 32767, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 93 "$display", "Test case: a=0x7FFF, b=0x7FFF, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 32767, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 97 "$display", "Test case: a=0x7FFF, b=0x0001, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x555590c6f420;
T_6 ;
    %vpi_call 2 102 "$display", "=== Boundary Value Test ===" {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 105 "$display", "Test case: a=0x0000, b=0x0000, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 65535, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 65535, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 109 "$display", "Test case: a=0xFFFF, b=0xFFFF, cin=0 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %pushi/vec4 65535, 0, 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 113 "$display", "Test case: a=0x0000, b=0xFFFF, cin=1 => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %end;
    .thread T_6;
    .scope S_0x555590c6f420;
T_7 ;
    %vpi_call 2 118 "$display", "=== Random Data Test ===" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555590cf43f0_0, 0, 32;
T_7.0 ; Top of for-loop
    %load/vec4 v0x555590cf43f0_0;
    %cmpi/s 100, 0, 32;
	  %jmp/0xz T_7.1, 5;
    %vpi_func 2 120 "$random" 32 {0 0 0};
    %pushi/vec4 65536, 0, 32;
    %mod/s;
    %pad/s 16;
    %store/vec4 v0x555590cf4090_0, 0, 16;
    %vpi_func 2 121 "$random" 32 {0 0 0};
    %pushi/vec4 65536, 0, 32;
    %mod/s;
    %pad/s 16;
    %store/vec4 v0x555590cf4170_0, 0, 16;
    %vpi_func 2 122 "$random" 32 {0 0 0};
    %pushi/vec4 2, 0, 32;
    %mod/s;
    %pad/s 1;
    %store/vec4 v0x555590cf4210_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 124 "$display", "Test case: a=0x%04X, b=0x%04X, cin=%b => sum=0x%04X, cout=%b, overflow=%b", v0x555590cf4090_0, v0x555590cf4170_0, v0x555590cf4210_0, v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
T_7.2 ; for-loop step statement
    %load/vec4 v0x555590cf43f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555590cf43f0_0, 0, 32;
    %jmp T_7.0;
T_7.1 ; for-loop exit label
    %end;
    .thread T_7;
    .scope S_0x555590c6f420;
T_8 ;
    %delay 2000000, 0;
    %vpi_call 2 131 "$display", "=== Test Completed ===" {0 0 0};
    %vpi_call 2 132 "$finish" {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x555590c6f420;
T_9 ;
    %vpi_call 2 137 "$monitor", "Time: %t | a=0x%04X | b=0x%04X | cin=%b | sum=0x%04X | cout=%b | overflow=%b", $time, v0x555590cf4090_0, v0x555590cf4170_0, v0x555590cf4210_0, v0x555590cf4600_0, v0x555590cf4350_0, v0x555590cf4490_0 {0 0 0};
    %end;
    .thread T_9;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "file_workspace/testbenches/testbench_adder_16bit.v";
    "file_workspace/designs/adder_16bit.v";
