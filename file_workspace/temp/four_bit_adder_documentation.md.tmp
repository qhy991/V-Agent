# 4位加法器模块说明文档

## 模块概述
four_bit_adder是一个4位组合逻辑加法器模块，用于执行两个4位二进制数的加法运算，并处理进位输入和输出。

## 端口定义

| 端口名 | 方向 | 位宽 | 描述 |
|--------|------|------|------|
| a | input | [3:0] | 4位加数输入 |
| b | input | [3:0] | 4位被加数输入 |
| cin | input | 1 | 进位输入 |
| sum | output | [3:0] | 4位和输出 |
| cout | output | 1 | 进位输出 |

## 功能描述
该模块实现了4位二进制加法运算，支持级联操作。通过将两个4位输入a和b与进位输入cin相加，产生4位和输出sum以及进位输出cout。

## 实现方式
模块采用结构化设计，使用4个全加器级联实现：
1. 每一位的加法使用Verilog的加法运算符实现
2. 利用拼接操作符{cout,sum}直接提取进位和和值
3. 内部定义了中间进位信号c1,c2,c3用于连接各级全加器

## 时序特性
这是一个纯组合逻辑电路，没有时钟信号，输出在输入变化后立即稳定。

## 应用场景
- ALU中的算术运算单元
- 处理器中的地址计算
- 需要级联扩展的多位加法器构建

## 使用示例
```verilog
four_bit_adder uut (
    .a(4'b0011),     // 输入a = 3
    .b(4'b0101),     // 输入b = 5
    .cin(1'b0),      // 进位输入 = 0
    .sum(sum),       // 和输出 = 8 (4'b1000)
    .cout(cout)      // 进位输出 = 0
);
```

## 设计特点
- 简洁高效的RTL实现
- 可综合的纯组合逻辑设计
- 支持级联扩展
- 低功耗优化设计